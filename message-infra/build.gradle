bootJar { enabled = false }
jar { enabled = true }

dependencies {

    api project(':message-core')

    // spring
    api 'org.springframework.kafka:spring-kafka:3.1.0'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // 만약 명시적으로 드라이버 버전을 지정하고 싶다면:
    api 'org.mongodb:mongodb-driver-sync'
    api 'com.fasterxml.jackson.core:jackson-core'
    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'com.fasterxml.jackson.core:jackson-annotations'

    // QueryDSL 의존성
    api 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    // querydsl
    api 'com.querydsl:querydsl-mongodb:5.0.0'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // lombok
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
